name: CI

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main, develop ]

jobs:
  security:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.4.4
          bundler-cache: true

      - name: Scan for common Rails security vulnerabilities using static analysis
        run: bin/brakeman --no-pager

      - name: Scan for vulnerable dependencies
        run: bundle exec bundler-audit --update

  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: fincore_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      RAILS_ENV: test
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/fincore_test
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: postgres
      DATABASE_HOST: localhost
      DATABASE_PORT: 5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.4.4
        bundler-cache: true

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y postgresql-client

    - name: Setup database
      run: |
        bundle exec rails db:create
        bundle exec rails db:migrate

    - name: Run RSpec tests
      run: bundle exec rspec --format progress

    - name: Generate SimpleCov report
      run: |
        echo "SimpleCov coverage report generated during RSpec run"
        
    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: coverage-report
        path: coverage/

    - name: Check coverage threshold
      run: |
        if [ -f coverage/.last_run.json ]; then
          echo "Coverage results found"
        else
          echo "No coverage results found"
        fi

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.4.4
        bundler-cache: true

    - name: Lint code for consistent style
      run: bin/rubocop -f github

    - name: Lint code with detailed output
      run: bundle exec rubocop --format simple
      if: failure()

  quality:
    runs-on: ubuntu-latest
    needs: [security, test, lint]
    if: always()
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Quality Gate Summary
      run: |
        echo "## Quality Gate Results" >> $GITHUB_STEP_SUMMARY
        echo "- Security: ${{ needs.security.result }}" >> $GITHUB_STEP_SUMMARY  
        echo "- Tests: ${{ needs.test.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- Lint: ${{ needs.lint.result }}" >> $GITHUB_STEP_SUMMARY
        
        if [[ "${{ needs.security.result }}" == "success" && "${{ needs.test.result }}" == "success" && "${{ needs.lint.result }}" == "success" ]]; then
          echo "✅ All quality checks passed!" >> $GITHUB_STEP_SUMMARY
          exit 0
        else
          echo "❌ Quality gate failed!" >> $GITHUB_STEP_SUMMARY
          exit 1
        fi
